<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <!-- Mybatis会动态实现daoImpl,不过需要在mapper文件夹下创建BookDao.xml和AppointmentDao.xml
  		spring-dao.xml文件会自动扫描mapper文件夹下的配置 -->
    <!-- 
    1.namespace是该xml对应的接口的全名
    2.select和update中的id对应方法名
    3.resultType是返回值类型
    4.parameterType是参数类型(可选)
    5.#{...}填写的是方法的参数 
    6.parameterType:输入参数类型
    7.resultType:输出参数类型
    -->
<mapper namespace="wang.miansen.roothub.modules.qmxGroup.dao.qmxGroupDao">
	<!-- 目的：为dao接口方法提供sql语句配置 -->
	<resultMap id="BaseResultMap" type="wang.miansen.roothub.modules.qmxGroup.model.QmxGroup">
        <id column="group_id" jdbcType="INTEGER" property="groupId"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
    </resultMap>
    <sql id="Base_Column_List">
        group_id, group_name
    </sql>
    <select id="selectAll" resultType="QmxGroup">
		SELECT
        <include refid="Base_Column_List"/>
		FROM
			qmx_group
	</select>
	
	<select id="selectById" resultType="QmxGroup">
	select <include refid="Base_Column_List"/>
	from qmx_group where group_id=#{id}
	</select>
	
	<insert id="insertQmxGroup" parameterType="wang.miansen.roothub.modules.user.model.UserCheck" keyProperty="userId" useGeneratedKeys="true">
		INSERT INTO qmx_group
		(
		group_id,
		group_name,
		)
		values
		(#{groupId},
		#{groupName}
		)
	</insert>
</mapper>